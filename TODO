TODO
-----------

PrepareDB.py
  1. Review and incorperate Chubak's dedupe code. 
    
HmmsearchDB.py
  1. Refactor Multi-Gene Filter
  2. Refactor Internal-Multi Filter
  3. Explore potential for chunked prot-file creation. This would involve splitting input.fa into chunks, doing parallel fastatranslate calls, and then combining the multiple outputs.
      a. Alternative: rewrite fastatranslate in Rust so that it can thread and handle this internally.
      
BlastPalDB.py
  1. Bicobus Style Review
  
ReporterDB.py
  1. Remove best-reciprocal-hits.txt & summary.txt and related code.
  2. Refactor exonerate section. Bottleneck possibly caused by python code.
  3. Reciprocal-filter refactor.
  
Mafft.py
  1. Before passing a gene.fa input to Mafft, delete references, but store header names. Replace the headers of the references grabbed from the aln folder with saved headers. (2x speedup for Mafft.py)
  
Pal2Nal.py (LOW PRIORITY)
  1. Full blown rewrite. Python version is at least 4x slower than Perl version. (A lot of poor design decisions in Pal2Nal.py) Perhaps rewrite in Golang or Rust? 
  
FlexCull.py
  1. Refactor
  
OutlierCheck.py
  1. Refactor
  2. Add additional outlier check methodology.
  
CrossContamination.py
  1. TODO
  
MergeAll.py
  1. Refactor (Fix that birds nest for loop)
  
MergeGenes.py 
  1. Refactor
  
Finalize Dataset Section
  1. Heavy refactor and script combination
     a. TaxaKick.py
     b. ColumnTrim.py
     c. StopCodonRemove.py
     d. Renamer.py
     e. Concatenate.py
